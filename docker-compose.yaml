services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    image: ${PROJECT_NAME}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - .:/app
    environment:
      - ENV=${ENV:-dev}
    env_file:
      - profiles/${ENV:-dev}/.env.app
    restart: always
    depends_on:
      - database
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost ${APP_PORT} || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10mb"
        max-file: "5"

  database:
    image: postgres:latest
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - ENV=${ENV:-dev}
    env_file:
      - profiles/${ENV:-dev}/.env.database
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema/init-db.sql:/docker-entrypoint-initdb.d/01-init-db.sql
      - ./schema/triggers.sql:/docker-entrypoint-initdb.d/02-triggers.sql
      - ./schema/init-data.sql:/docker-entrypoint-initdb.d/03-init-data.sql
      - ./schema/${DUMP_ENV:-dev}-dump.sql:/docker-entrypoint-initdb.d/04-${DUMP_ENV:-dev}-dump.sql
    command: postgres -c log_min_messages=notice -c logging_collector=off -c log_destination=stderr
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-postgres}"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "1mb"
        max-file: "5"

  liquibase:
    image: horduntech/customs:liquibase
    environment:
      - ENV=${ENV:-dev}
    env_file:
      - profiles/${ENV:-dev}/.env.liquibase
    volumes:
      - ./docker/liquibase/changelog:/liquibase/changelog
      - ./docker/liquibase/liquibase.properties:/liquibase/liquibase.properties:ro
      - ./schema:/liquibase/schema:ro
      - ./docker/liquibase/migrate.sh:/liquibase/migrate
    depends_on:
      - database
    entrypoint: [ "sh", "-c", "/liquibase/migrate && tail -f /dev/null" ]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "liquibase status --verbose"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "90k"
        max-file: "5"

volumes:
  postgres_data:
