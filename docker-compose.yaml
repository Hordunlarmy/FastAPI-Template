services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    container_name: c54
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - .:/workspace/c54
    environment:
      - PORT=${APP_PORT}
    env_file:
      - .env
    restart: always
    depends_on:
      - database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}/api"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - c54-network

  database:
    image: postgres:latest
    container_name: c54-db
    restart: always
    ports:
      - "5431:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema/init-db.sql:/docker-entrypoint-initdb.d/01-init-db.sql
      - ./schema/init-data.sql:/docker-entrypoint-initdb.d/02-init-data.sql
    command: postgres -c log_min_messages=notice -c logging_collector=off -c log_destination=stderr
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - c54-network

  liquibase:
    build:
      context: .
      dockerfile: docker/Dockerfile.liquibase
    container_name: c54-liquibase
    env_file:
      - .env
    environment:
      - LIQUIBASE_DEFAULTS_FILE=/liquibase/liquibase.properties
      - LIQUIBASE_COMMAND_URL=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      - LIQUIBASE_COMMAND_USERNAME=${DB_USER}
      - LIQUIBASE_COMMAND_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./docker/config/liquibase/changelog:/liquibase/changelog:rw
      - ./docker/config/liquibase/liquibase.properties:/liquibase/liquibase.properties:ro
    depends_on:
      - database
    command:
      - sh
      - -c
      - |
        liquibase --overwriteOutputFile=true generate-changelog && 
        liquibase changelogSync &&
        tail -f /dev/null
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "liquibase status --verbose"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "90k"
        max-file: "5"
    networks:
      - c54-network

  web:
    image: nginx:latest
    container_name: c54-nginx
    profiles:
      - dev
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./docker/config/nginx/c54.conf:/etc/nginx/conf.d/default.conf
      - .:/workspace/c54
      - ./docker/nginx/certs:/etc/nginx/certs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - c54-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    depends_on:
      - app
      - database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  c54-network:
    driver: bridge

volumes:
  postgres_data:
